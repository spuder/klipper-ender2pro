[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_min: -11
position_endstop: -11
position_max: 165
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_min: -5
position_endstop: -5
position_max: 165
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -5.0
position_max: 180

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 27.53480577
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_pin: PC5
sensor_type: EPCOS 100K B57560G104F
control: pid
# PID_CALIBRATE HEATER=extruder TARGET=220
pid_Kp: 29.634
pid_Ki: 2.102
pid_Kd: 104.459
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: PB10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# PID_CALIBRATE HEATER=heater_bed TARGET=50
pid_Kp: 72.921
pid_Ki: 1.594
pid_Kd: 834.031
min_temp: 0
max_temp: 80

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

# Make sure you add the klipper init script for the mcu
# https://github.com/Klipper3d/klipper/blob/master/docs/RPi_microcontroller.md#install-the-rc-script
[mcu rpi]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# https://github.com/MarlinFirmware/Configurations/pull/633#issuecomment-995424611
# https://docs.google.com/spreadsheets/d/1DYhh9fwLnvZzuNvMoBen9Dl68KN-4TWkbO94lJ4iwe4/edit
[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PA2
click_pin: ^!PB2

[output_pin beeper]
pin: PC6

# Uncomment to enable BLTouch
# Calibrated for this bracket https://www.thingiverse.com/thing:5176711
[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -30
y_offset: 2
z_offset: 2

# Uncomment to enable BLTouch
[safe_z_home]
home_xy_position: 83, 83 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10
z_hop_speed: 10

[virtual_sdcard]
path: home/pi/gcode_files

[pause_resume]

[duplicate_pin_override]
pins: PC5

# Yellow Wire
[heater_fan extruder]
pin: rpi:gpio26 #BCM=26, wPI=25, Physical=37
heater: extruder
fan_speed: 1.0
# min_temp: 0
# max_temp: 260
# target_temp: 0
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: PC5
# control: pid
# pid_Kp: 29.634
# pid_Ki: 2.102
# pid_Kd: 104.459
# max_power: 1.0

# Blue Wire
[controller_fan Case]
pin: rpi:gpio13 #BCM=13, wPI=23, Physical=33
fan_speed: 0.55 # Fan is too loud at 100%
heater: heater_bed

# Orange Wire
[output_pin LED]
pin: rpi:gpio19 #BCM=19, wPI=24, Physical=35

### MACROS ###
##############

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
